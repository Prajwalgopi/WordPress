version: 0.2

env:
  variables:
    AWS_REGION: "us-east-1"
    ECR_REGISTRY: "195275633219.dkr.ecr.us-east-1.amazonaws.com"
    REPO_NAME: "eks-repo"
    IMAGE_TAG: "wordpress-final"
    EKS_CLUSTER_NAME: "my-eks-cluster"
    K8S_NAMESPACE: "eks-project"
    DEPLOYMENT_NAME: "wordpress"

phases:
  install:
    commands:
      - echo Installing kubectl...
      # Download kubectl binary
      - curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/kubectl || { echo "Failed to download kubectl"; exit 1; }
      # Give execute permission to kubectl
      - chmod +x ./kubectl
      # Move kubectl to the system's bin folder
      - mv ./kubectl /usr/local/bin/

  pre_build:
    commands:
      - echo Updating kubeconfig...
      - aws eks update-kubeconfig --region $AWS_REGION --name $EKS_CLUSTER_NAME

  build:
    commands:
    - echo "Deploying to EKS cluster..."
    - aws eks update-kubeconfig --region $AWS_REGION --name $EKS_CLUSTER_NAME

    - echo "Applying updated Kubernetes manifests (Service, Ingress, HPA)..."
    - kubectl apply -f service.yaml -n $K8S_NAMESPACE
    - kubectl apply -f ingress.yaml -n $K8S_NAMESPACE
    - kubectl apply -f hpa.yaml -n $K8S_NAMESPACE

    - echo "Checking if deployment $DEPLOYMENT_NAME exists..."
    - |
      if kubectl get deployment "$DEPLOYMENT_NAME" -n "$K8S_NAMESPACE"; then
        echo "Deployment exists. Restarting to apply new image..."
        kubectl rollout restart deployment "$DEPLOYMENT_NAME" -n "$K8S_NAMESPACE"
        echo "Verifying deployment rollout..."
        kubectl rollout status deployment "$DEPLOYMENT_NAME" -n "$K8S_NAMESPACE"
      else
        echo "Deployment not found. Applying deployment manifest..."
        kubectl apply -f Deployment.yaml -n "$K8S_NAMESPACE"
        echo "Deployment created successfully."
      fi


artifacts:
  files:
    - Deployment.yaml
    - service.yaml
    - ingress.yaml
    - hpa.yaml
